// components/ClaimForm.tsx

'use client';

import { Form, Input, Select, DatePicker, Button, Card, message } from 'antd';
import { useState } from 'react';
import dayjs from 'dayjs';
import { Divider , Checkbox} from 'antd';
import { Typography } from 'antd';
import { useClaim } from '@/app/context/ClaimContext';

const { Option } = Select;

const { Title } = Typography;

const ClaimForm = () => {
  const { addClaim } = useClaim();
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);
  const [selectedWarranty, setSelectedWarranty] = useState<string[]>([]);


// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö Google App Script ‡πÄ‡∏≠‡∏≤‡∏•‡∏á Google Sheet
  
  const onFinish = async (values: any) => {
    console.log('Form values:', values);
    setLoading(true);

    
  const formattedValues = {
    ...values,
    receiverDate: values.receiverDate ? dayjs(values.receiverDate).format('DD/MM/YYYY') : '',
    inspectionDate: values.inspectionDate ? dayjs(values.inspectionDate).format('DD/MM/YYYY') : '',
    claimDate: values.claimDate ? dayjs(values.claimDate).format('DD/MM/YYYY') : '',
    reportDate: values.reportDate ? dayjs(values.reportDate).format('DD/MM/YYYY') : '',
  };

  addClaim(formattedValues);
  message.success('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
  form.resetFields();
  setSelectedWarranty([]);

  try {
    await fetch('/api/submit-claim', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(formattedValues),
    });

    message.success('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
    form.resetFields();
    setSelectedWarranty([]);
  } catch (error) {
    message.error('‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
  } finally {
    setLoading(false);
  }
  };

  

  const onWarrantyChange = (checkedValues: any[]) => {
    if (checkedValues.length > 1) {
      checkedValues = [checkedValues[checkedValues.length - 1]];
    }
    setSelectedWarranty(checkedValues);
    form.setFieldsValue({ warranty: checkedValues });
  };

  return (
    <Card title="üìã ‡πÉ‡∏ö‡πÄ‡∏Ñ‡∏•‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤" style={{ maxWidth: 800, margin: 'auto' }}>
      <Form
        form={form}
        layout="vertical"
        onFinish={onFinish}
        initialValues={{ reportDate: dayjs() }}
        validateTrigger="onSubmit"
        style={{ marginTop: 0 }}
      >
        <Title level={4}>‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï</Title>
        <Form.Item name="provinceName" label="‡∏™‡∏≤‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Å‡∏≤‡∏£" rules={[{ required: true , message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≤‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Å‡∏≤‡∏£' }]}>
        <Select placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î">
            <Option value="‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø">‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø</Option>
            <Option value="‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç">‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç</Option>
            <Option value="‡πÇ‡∏Ñ‡∏£‡∏≤‡∏ä">‡πÇ‡∏Ñ‡∏£‡∏≤‡∏ä</Option>
            <Option value="‡∏≠‡∏∑‡πà‡∏ô ‡πÜ">‡∏≠‡∏∑‡πà‡∏ô ‡πÜ</Option>
          </Select>
        </Form.Item>

        <Form.Item name="customerName" label="‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤" rules={[{ required: true , message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠' }]}>
          <Input placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•" />
        </Form.Item>

        <Form.Item name="phone" label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£" rules={[{ required: true , message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£' }]}>
          <Input placeholder="‡πÄ‡∏ä‡πà‡∏ô 081-234-5678" />
        </Form.Item>

        <Form.Item name="address" label="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà" rules={[{ required: true , message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà' }]}>
          <Input.TextArea rows={2} placeholder="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤" />
        </Form.Item>

        <Form.Item name="product" label="‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤" rules={[{ required: true , message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤' }]}>
          <Input placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤" />
        </Form.Item>

        <Form.Item name="problem" label="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤" rules={[{ required: true , message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤' }]}>
          <Input.TextArea rows={3} placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î, ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ä‡πá‡∏≠‡∏ï ‡∏Ø‡∏•‡∏Ø" />
        </Form.Item>


        <Form.Item name="warranty" label="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô" rules={[{ required: true, message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô' }]}>
          <Checkbox.Group value={selectedWarranty} onChange={onWarrantyChange}>
            <Checkbox value="‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô">‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô</Checkbox>
            <Checkbox value="‡∏´‡∏°‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô">‡∏´‡∏°‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô</Checkbox>
          </Checkbox.Group>
        </Form.Item>

        {/* ‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô */}
        <Divider />

        <Title level={4}>üßë‚Äçüîß  ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</Title>


        <Form.Item name="receiver" label="‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏°" >
          <Input placeholder="‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏°" />
        </Form.Item>
        <Form.Item name="receiverDate" label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏°" >
          <DatePicker format="DD/MM/YYYY" style={{ width: '100%' }} />
        </Form.Item>
        <Form.Item name="inspector" label="‡∏Ñ‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö" >
          <Input placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö" />
        </Form.Item>
        <Form.Item name="inspectionDate" label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö" >
          <DatePicker format="DD/MM/YYYY" style={{ width: '100%' }} />
        </Form.Item>
        <Form.Item name="claimSender" label="‡∏Ñ‡∏ô‡πÑ‡∏õ‡πÄ‡∏Ñ‡∏•‡∏°">
          <Input placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏•‡∏°" />
        </Form.Item>
        <Form.Item name="claimDate" label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ‡πÄ‡∏Ñ‡∏•‡∏°/‡∏Ñ‡∏∑‡∏ô/‡∏™‡πà‡∏á" >
          <DatePicker format="DD/MM/YYYY" style={{ width: '100%' }} />
        </Form.Item>
        
        <Form.Item name="status" label="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏°" rules={[{ required: true, message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏°' }]}>
          <Select placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏°" style={{ width: '100%' }}>
            <Option value="‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</Option>
            <Option value="‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô">‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô</Option>
          </Select>
        </Form.Item>
        <Form.Item name="price" label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô" rules={[{ required: true, message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô' }]}>
          <Input 
          placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô"
          prefix="‡∏ø"
          type='number' />
        </Form.Item>
        <Form.Item name="note" label="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏">
          <Input.TextArea rows={2} />
        </Form.Item>
        
          <Button type="primary" htmlType="submit" loading={loading}>
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
          </Button>
      </Form>
    </Card>
    
  );
};

export default ClaimForm;